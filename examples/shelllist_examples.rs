extern crate rshellitems;
extern crate byteorder;
use rshellitems::shelllist::{ShellList};
use byteorder::{ReadBytesExt, LittleEndian};
use std::io::Cursor;
use std::io::Read;

fn example_001(){
    // shelllist_Copy of Metal Alloy List Research_4Ch_138h
    let buffer: &[u8] = &[
        0x36,0x01,0x14,0x00,0x1F,0x48,0xBA,0x8F,0x0D,0x45,0x25,0xAD,0xD0,0x11,0x98,0xA8,
        0x08,0x00,0x36,0x1B,0x11,0x03,0x4C,0x00,0x31,0x00,0x00,0x00,0x00,0x00,0x6C,0x40,
        0x62,0xAB,0x10,0x00,0x41,0x4C,0x4C,0x4F,0x59,0x52,0x7E,0x31,0x00,0x00,0x34,0x00,
        0x03,0x00,0x04,0x00,0xEF,0xBE,0x69,0x40,0x3A,0x8D,0x70,0x40,0x6B,0xA0,0x14,0x00,
        0x00,0x00,0x41,0x00,0x6C,0x00,0x6C,0x00,0x6F,0x00,0x79,0x00,0x20,0x00,0x52,0x00,
        0x65,0x00,0x73,0x00,0x65,0x00,0x61,0x00,0x72,0x00,0x63,0x00,0x68,0x00,0x00,0x00,
        0x18,0x00,0x54,0x00,0x31,0x00,0x00,0x00,0x00,0x00,0x70,0x40,0x72,0xA0,0x10,0x00,
        0x44,0x45,0x54,0x41,0x49,0x4C,0x7E,0x31,0x00,0x00,0x3C,0x00,0x03,0x00,0x04,0x00,
        0xEF,0xBE,0x68,0x40,0x5A,0xB1,0x70,0x40,0x72,0xA0,0x14,0x00,0x00,0x00,0x44,0x00,
        0x65,0x00,0x74,0x00,0x61,0x00,0x69,0x00,0x6C,0x00,0x65,0x00,0x64,0x00,0x20,0x00,
        0x44,0x00,0x6F,0x00,0x63,0x00,0x75,0x00,0x6D,0x00,0x65,0x00,0x6E,0x00,0x74,0x00,
        0x73,0x00,0x00,0x00,0x18,0x00,0x80,0x00,0x32,0x00,0xFA,0x0A,0x01,0x00,0x68,0x40,
        0x6E,0xB1,0x20,0x00,0x43,0x4F,0x50,0x59,0x4F,0x46,0x7E,0x31,0x2E,0x58,0x4C,0x53,
        0x00,0x00,0x64,0x00,0x03,0x00,0x04,0x00,0xEF,0xBE,0x68,0x40,0x6E,0xB1,0x70,0x40,
        0x70,0xA0,0x14,0x00,0x00,0x00,0x43,0x00,0x6F,0x00,0x70,0x00,0x79,0x00,0x20,0x00,
        0x6F,0x00,0x66,0x00,0x20,0x00,0x4D,0x00,0x65,0x00,0x74,0x00,0x61,0x00,0x6C,0x00,
        0x20,0x00,0x41,0x00,0x6C,0x00,0x6C,0x00,0x6F,0x00,0x79,0x00,0x20,0x00,0x4C,0x00,
        0x69,0x00,0x73,0x00,0x74,0x00,0x20,0x00,0x52,0x00,0x65,0x00,0x73,0x00,0x65,0x00,
        0x61,0x00,0x72,0x00,0x63,0x00,0x68,0x00,0x2E,0x00,0x78,0x00,0x6C,0x00,0x73,0x00,
        0x78,0x00,0x00,0x00,0x1C,0x00,0x00,0x00
    ];
    let mut reader = Cursor::new(buffer);

    let list_size = reader.read_u16::<LittleEndian>().unwrap();
    let mut list_buffer = vec![0;list_size as usize];
    reader.read_exact(&mut list_buffer).unwrap();

    let shell_list = ShellList::new(Cursor::new(list_buffer.as_slice())).unwrap();
    println!("{:#?}",shell_list);
}

fn main() {
    example_001();
}
