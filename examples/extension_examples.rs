extern crate rshellitems;
extern crate serde_json;
use rshellitems::extension_blocks::{ExtensionBlock};
use std::io::Cursor;

fn beef0004_001(){
    let buffer: &[u8] = &[
        0x64,0x00,0x03,0x00,0x04,0x00,0xEF,0xBE,0x68,0x40,0x6E,0xB1,0x70,0x40,0x70,0xA0,
        0x14,0x00,0x00,0x00,0x43,0x00,0x6F,0x00,0x70,0x00,0x79,0x00,0x20,0x00,0x6F,0x00,
        0x66,0x00,0x20,0x00,0x4D,0x00,0x65,0x00,0x74,0x00,0x61,0x00,0x6C,0x00,0x20,0x00,
        0x41,0x00,0x6C,0x00,0x6C,0x00,0x6F,0x00,0x79,0x00,0x20,0x00,0x4C,0x00,0x69,0x00,
        0x73,0x00,0x74,0x00,0x20,0x00,0x52,0x00,0x65,0x00,0x73,0x00,0x65,0x00,0x61,0x00,
        0x72,0x00,0x63,0x00,0x68,0x00,0x2E,0x00,0x78,0x00,0x6C,0x00,0x73,0x00,0x78,0x00,
        0x00,0x00,0x1C,0x00
    ];

    let extension_block = ExtensionBlock::new(Cursor::new(buffer)).unwrap();
    let extension_block_json = serde_json::to_string(&extension_block).unwrap();

    println!("{:#?}",extension_block);
    println!("{}",extension_block_json);
}

fn beef0004_utf16_russian(){
    let buffer: &[u8] = &[
        0xBC,0x00,0x09,0x00,0x04,0x00,0xEF,0xBE,0xF4,0x4A,0xB1,0x12,0xF4,0x4A,0xB1,0x12,
        0x2E,0x00,0x00,0x00,0x92,0x3D,0x01,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x00,0x00,
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x5A,0x04,0x01,0x39,0x04,
        0x46,0x04,0x43,0x04,0x3A,0x04,0x35,0x04,0x3D,0x04,0x33,0x04,0x48,0x04,0x49,0x04,
        0x37,0x04,0x44,0x04,0x4B,0x04,0x32,0x04,0x30,0x04,0x3F,0x04,0x40,0x04,0x3E,0x04,
        0x3B,0x04,0x34,0x04,0x4F,0x04,0x47,0x04,0x41,0x04,0x3C,0x04,0x38,0x04,0x42,0x04,
        0x4C,0x04,0x45,0x04,0x4A,0x04,0x36,0x04,0x4D,0x04,0x31,0x04,0x4E,0x04,0x2E,0x00,
        0x4D,0x04,0x4A,0x04,0x3D,0x00,0x2D,0x00,0x51,0x04,0x01,0x04,0x19,0x04,0x26,0x04,
        0x23,0x04,0x1A,0x04,0x15,0x04,0x1D,0x04,0x13,0x04,0x28,0x04,0x29,0x04,0x17,0x04,
        0x24,0x04,0x2B,0x04,0x12,0x04,0x10,0x04,0x1F,0x04,0x20,0x04,0x1E,0x04,0x1B,0x04,
        0x14,0x04,0x2F,0x04,0x27,0x04,0x21,0x04,0x1C,0x04,0x18,0x04,0x22,0x04,0x2E,0x00,
        0x78,0x00,0x6C,0x00,0x73,0x00,0x78,0x00,0x00,0x00,0x1C,0x00
    ];

    let extension_block = ExtensionBlock::new(Cursor::new(buffer)).unwrap();
    let extension_block_json = serde_json::to_string(&extension_block).unwrap();

    println!("{:#?}",extension_block);
    println!("{}",extension_block_json);
}

fn main() {
    beef0004_001();
    beef0004_utf16_russian();
}
